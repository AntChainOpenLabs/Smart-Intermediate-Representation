module_name = "HelloWorld"
contract HelloWorld {
    state {
    }
    pub fn HelloWorld.HelloWorld.init()  {
        0:
            call(@ir.builtin.add_coverage_counter(0: u32, ) -> void, )
            ret()
    }

    pub fn HelloWorld.HelloWorld.greeting() -> str {
        1:
            call(@ir.builtin.add_coverage_counter(1: u32, ) -> void, )
            call(@ir.builtin.print("Hello Smart Intermediate Representation": str, ) -> void, ) !ir_debug_location !0
            ret("Hello world!": str, ) !ir_debug_location !1
    }

    pub fn HelloWorld.HelloWorld.greeting2(%0: str, ) -> str {
        1:
            call(@ir.builtin.add_coverage_counter(1: u32, ) -> void, )
            call(@ir.builtin.print("Hello Smart Intermediate Representation": str, ) -> void, ) !ir_debug_location !0
            ret(%0: str, ) !ir_debug_location !1
    }

}
meta !0 = !{3: u32, 3: u32, "examples/hello_world.ir": str, }
meta !1 = !{4: u32, 4: u32, "examples/hello_world.ir": str, }
